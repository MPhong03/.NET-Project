@page "/reset/{Email}"
@layout AuthenticationLayout

@using DotNETProject.Shared;
@using Newtonsoft.Json;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@*<h3>Change Password</h3>

<form @onsubmit="ChangePassword">
    <div class="form-group">
        <label for="password">New Password</label>
        <input type="password" class="form-control" id="password" @bind="resetPasswordDto.Password">
    </div>

    <div class="form-group">
        <label for="cpassword">Confirm Password</label>
        <input type="password" class="form-control" id="cpassword" @bind="resetPasswordDto.PasswordConfirm">
    </div>
    <input type="hidden" @bind="resetPasswordDto.Email">
    <button type="submit" class="btn btn-primary">Send OTP</button>
</form>*@

<div class="container">
    <div class="row">
        <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
            <div class="card border-0 shadow rounded-3 my-5 bg-dark text-light">
                <div class="card-body p-4 p-sm-5">
                    <h3 class="card-title text-center mb-5 fw-light fs-5">Change Password</h3>
                    <form @onsubmit="ChangePassword">
                        <div class="form-floating mb-3 text-dark">
                            <input type="password" class="form-control" id="floatingPassword" placeholder="New Password" @bind="resetPasswordDto.Password">
                            <label for="floatingPassword">New Password</label>
                        </div>
                        <div class="form-floating mb-3 text-dark">
                            <input type="password" class="form-control" id="floatingConfirmPassword" placeholder="Confirm Password" @bind="resetPasswordDto.PasswordConfirm">
                            <label for="floatingConfirmPassword">Confirm Password</label>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary btn-login text-uppercase fw-bold" type="submit">
                                Change Password
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}


@code {
    [Parameter] public string Email { get; set; }
    private ResetPasswordDto resetPasswordDto = new ResetPasswordDto();
    private string errorMessage = "";

    private async Task ChangePassword()
    {
        try
        {
            resetPasswordDto.Email = Email;
            var content = new StringContent(JsonConvert.SerializeObject(resetPasswordDto), System.Text.Encoding.UTF8, "application/json");
            var response = await HttpClient.PostAsync("/api/auth/reset-password", content);

            if (response.IsSuccessStatusCode)
            {
                // Send OTP Successful

                NavigationManager.NavigateTo("/login");
            }
            else
            {
                // Registration failed, handle errors
                if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
                {
                    // User already exists or other validation errors
                    errorMessage = await response.Content.ReadAsStringAsync();
                }
                else
                {
                    // Handle other error cases
                    errorMessage = "An error occurred during changing password.";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
        }
    }
}
