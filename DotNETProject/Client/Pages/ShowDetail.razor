@page "/tv/{Id}"
@using DotNETProject.Client.Service;
@using DotNETProject.Shared;
@inject HttpClient httpClient
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager navigationManager
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

<PageTitle>@show.Name</PageTitle>
<!-- Banner Start -->
<div class="container">
    <img id="banner" src="@show.BackgroundUrl" class="d-block w-100" alt="...">
    <a href="/tv/play/@show.Id/@show.episodes.First().Id"><button>XEM NGAY</button></a>
    <div class="main-content movie">
        <section class="movie-detail container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="trending-info g-border">
                        <div class="d-flex justify-content-between">
                            <h1 class="trending-text big-title text-uppercase mt-0">@show.Name</h1>

                            <a type="button" class="text-danger" @onclick="SaveFilm">
                                @if (checkLoggin)
                                {
                                    @if (isSaved)
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z" />
                                        </svg>
                                    }
                                    else
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                                            <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                                        </svg>
                                    }
                                }
                                else
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                                        <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                                    </svg>
                                }
                            </a>
                        </div>
                        <ul class="p-0 list-inline d-flex align-items-center movie-content">
                            @foreach (var genre in show.FilmGenres)
                            {
                                <li class="text-white">@genre.Genre.Name</li>
                            }
                        </ul>
                        <div class="d-flex align-items-center text-white text-detail">
                            <span class="trending-year">@show.ReleaseYear</span>
                        </div>
                        <ul class="p-0 text-light list-inline d-flex align-items-center movie-content">
                            <span>Đạo diễn: </span>
                            @foreach (var genre in show.FilmDirectors)
                            {
                                <li class="text-white"><a href="/director/@genre.Director.Id">@genre.Director.Name</a></li>
                            }
                        </ul>
                        <p class="trending-dec w-100 mb-0">
                            @show.Description
                            @* Jaime Reyes-mới tốt nghiệp trở về quê nhà để tìm kiếm tương lai mới nhưng mọi
                            thứ quá khó khăn cho cậu. Cuộc đời Jaime bỗng rẽ hướng với món cổ vật cậu nhặt
                            được-Scarab chọn cậu làm vật chủ và trở thành siêu anh hùng BLUE BEETLE với
                            bộ áo giáp tối tân nhất. *@
                        </p><br>
                        <h4 class="text-white">Diễn Viên</h4><br>
                        <div class="container list">

                            <div class="row">
                                @foreach (var item in show.FilmCasts)
                                {
                                    <div class="col-lg-2 col-md-3 col-sm-6 col-xs-6">
                                        <a href="/cast/@item.Cast.Id">
                                            <img id="cast" src="@item.Cast.AvatarUrl" alt="@item.Cast.Name" />
                                            <p>@item.Cast.Name</p><p>@item.Role</p>
                                        </a>
                                    </div>

                                    Console.WriteLine($"Name: {@item.Cast.Name}");
                                    Console.WriteLine($"Url: {@item.Cast.AvatarUrl}");
                                }
                            </div>

                            @* <div class="row">
                            <div class="col-md-4">
                            <div class="row">
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo Maridueña</p></a></div>
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo </p></a></div>
                            </div>
                            </div>
                            <div class="col-md-4">
                            <div class="row">
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo Maridueña</p></a></div>
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo Maridueña</p></a></div>
                            </div>
                            </div>
                            <div class="col-md-4">
                            <div class="row">
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo Maridueña</p></a></div>
                            <div class="col-6"><a href=""><img id="cast" src="img/cast/cast-1-1.jpg"><p>Xolo Maridueña</p></a></div>
                            </div>
                            </div>
                            </div> *@
                        </div>

                        <h4 class="text-white">Danh sách các tập</h4><br>

                        <ul class="list-group list-group-flush">

                            @foreach (var item in show.episodes)
                            {
                                <a href="/tv/play/@show.Id/@item.Id" type="button" class="list-group-item list-group-item-action">
                                    Tập @item.EpisodeNumber - @item.EpisodeName
                                </a>
                            }

                        </ul>
                        

                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

@code {
    [Parameter] public string Id { get; set; }

    private TVSeriesDto show = new TVSeriesDto();

    private bool checkLoggin { get; set; }

    private bool isSaved { get; set; }

    protected override async Task OnInitializedAsync()
    {

        show = await httpClient.GetFromJsonAsync<TVSeriesDto>($"api/TVSeries/{Int32.Parse(Id)}");

        await CheckLoggin();
        if (checkLoggin)
        {
            await UpdateSavedState();
        }
    }

    private async Task UpdateSavedState()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (!authState.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        } 
        else
        {
            var email = authState.User.Identity.Name;

            var response = await httpClient.GetFromJsonAsync<bool>($"api/Auth/checkSaved/{Id}?email={email}");

            if (response != null)
            {
                isSaved = response;
            }
            
        }

    }

    private async void SaveFilm()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (!authState.User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        } 
        else
        {
            var email = authState.User.Identity.Name;

            SaveFilmDto request = new SaveFilmDto()
                {
                    Id = Int32.Parse(Id),
                    Email = email
                };

            var response = await httpClient.PostAsJsonAsync($"api/Auth/save", request);

            if (response.IsSuccessStatusCode)
            {
                var messageResponse = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", messageResponse);
                await UpdateSavedState();
                // Chuyen trang
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"{errorResponse}");
            }
            
        }

    }

    private async Task CheckLoggin()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (!authState.User.Identity.IsAuthenticated)
        {
            checkLoggin = false;
        }
        else
        {
            checkLoggin = true;
        }

    }
}