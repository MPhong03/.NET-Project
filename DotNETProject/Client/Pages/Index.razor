@page "/"
@inject HttpClient httpClient

@using Blazored.LocalStorage
@using DotNETProject.Shared;
@inject ILocalStorageService localStorage

<PageTitle>Trang chủ</PageTitle>
<div class="container">
    <div class="content-container">
        <div id="carouselCaptions" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-indicators">
                @if (films.Count > 0)
                {
                    var isFirstItem = true;
                    for (var i = 0; i < films.Count; i++)
                    {
                        <button type="button" data-bs-target="#carouselCaptions" data-bs-slide-to="@i" class="@(isFirstItem ? "active" : "")" aria-current="true" aria-label="Slide @i"></button>
                        isFirstItem = false;
                    }
                }
            </div>
            <div class="carousel-inner">

                @if (films.Count > 0)
                {
                    var isFirstItem = true;
                    foreach (var banner in films.Where(film => film.isActiveBanner == true))
                    {

                        <div class="carousel-item @(isFirstItem ? "active" : "")">
                            <img src="@banner.BackgroundUrl" style="height: 80vh;" class="d-block w-100" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <img src="@banner.LogoUrl" class="featured-title" alt="...">
                                <p class="text-light">
                                    @banner.Description
                                </p>

                                <a href="/@banner.Type/@banner.Id" class="btn featured-button">XEM NGAY</a>

                            </div>
                        </div>

                        isFirstItem = false;
                    }
                }    
                
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
    
    <br><br>

    <div class="container list">
        <h3>Phim Lẻ Đề Cử</h3>

        <div class="row">
            @foreach (var item in films.Where(film => film.Type == "movie"))
            {
                <div class="col-lg-2 col-md-3 col-sm-6 col-xs-6"><a href="/@item.Type/@item.Id"><img src="@item.PosterUrl"><p>@item.Name</p></a></div>
            }
        </div>

        <h3>Phim Bộ Đề Cử</h3>

        <div class="row">
            @foreach (var item in films.Where(film => film.Type == "tv"))
            {
                <div class="col-lg-2 col-md-3 col-sm-6 col-xs-6"><a href="/@item.Type/@item.Id"><img src="@item.PosterUrl"><p>@item.Name</p></a></div>
            }
        </div>

    </div>
</div>

@code {
    private ICollection<FilmDto> films = new List<FilmDto>();
    private Dictionary<int, string> filmTypes = new Dictionary<int, string>();

    protected override async Task OnInitializedAsync()
    {

        films = await httpClient.GetFromJsonAsync<List<FilmDto>>("api/Films");

    }
}
