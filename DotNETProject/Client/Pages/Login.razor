@page "/login"

@using DotNETProject.Shared;
@using Newtonsoft.Json;
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage

<h3>Login</h3>

<form @onsubmit="LoginUser">
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" @bind="userDto.Email">
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="userDto.Password">
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private UserDto userDto = new UserDto();
    private string errorMessage = "";

    private async Task LoginUser()
    {
        try
        {
            var content = new StringContent(JsonConvert.SerializeObject(userDto), System.Text.Encoding.UTF8, "application/json");
            var response = await HttpClient.PostAsync("/api/auth/login", content);

            if (response.IsSuccessStatusCode)
            {
                // Login successful
                var responseContent = await response.Content.ReadAsStringAsync();
                var responseDto = JsonConvert.DeserializeObject<ReponseDto>(responseContent);

                await localStorage.SetItemAsync("token", responseDto.token);

                Console.WriteLine("Token: " + localStorage.GetItemAsStringAsync("token"));

                NavigationManager.NavigateTo("/");
            }
            else
            {
                // Registration failed, handle errors
                if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
                {
                    // User already exists or other validation errors
                    errorMessage = "Login failed. Please check your credentials.";
                }
                else
                {
                    // Handle other error cases
                    errorMessage = "An error occurred during login.";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
        }
    }
}
