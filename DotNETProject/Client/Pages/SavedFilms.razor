@page "/my-collection"
@using DotNETProject.Client.Service;
@using DotNETProject.Shared;
@inject CustomAuthStateProvider AuthStateProvider
@inject HttpClient httpClient
@inject IJSRuntime JSRuntime

<PageTitle>Bộ sưu tập</PageTitle>

<div class="container">
    <div class="content-container">
        <p class="h1">BỘ SƯU TẬP</p>
@*         <!-- FILTER -->
        <div class="container me-3 mb-3">
            <div class="row">
                <!-- Tìm kiếm -->
                <div class="input-group mb-3">
                    <input type="text" class="form-control" placeholder="Nhập vào tên phim..." aria-label="SearchBar" aria-describedby="basic-addon2" @oninput="SearchByKeyword">

                </div>
            </div>
        </div> *@
        <!-- MOVIE LIST -->
        <div class="container">
            @if (DisplayedItems.Any())
            {
                @foreach (var item in DisplayedItems)
                {
                    <div class="row">
                        <div class="card mb-3 bg-dark">
                            <div class="row no-gutters">
                                <div class="col-md-2 p-0">
                                    <img src="@item.PosterUrl" class="card-img p-2" alt="@item.Name">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h3 class="card-title text-light fw-bold">@item.Name</h3>
                                        <p class="card-text">@item.Description</p>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="cta-section position-absolute bottom-0 end-0 p-2">
                                        <a href="/@item.Type/@item.Id" class="btn btn-primary">Chi tiết</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="row">
                    <div class="col-12 text-light h5 text-center">Bạn chưa lưu bất kỳ phim nào</div>
                </div>
            }
        </div>



        <!-- PAGINATION -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" @onclick="() => GoToPage(currentPage - 1)" tabindex="-1" aria-disabled="@(currentPage == 1 ? "true" : "false")">Previous</a>
                </li>
                @for (var pagenum = 1; pagenum <= TotalPages; pagenum++)
                {
                    <li class="page-item @(currentPage == pagenum ? "active" : "")">
                        <a class="page-link" @onclick="() => GoToPage(pagenum)">@pagenum</a>
                    </li>
                }
                <li class="page-item @(currentPage == TotalPages ? "disabled" : "")">
                    <a class="page-link" @onclick="() => GoToPage(currentPage + 1)">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>


@code {
    private IEnumerable<FilmDto> films = new List<FilmDto>();
    private UserDetailDto profile = new UserDetailDto();
    // private Dictionary<int, string> filmTypes = new Dictionary<int, string>();

    private string TITLE;

    private int pageSize = 5;
    private int currentPage = 1;
    private int totalItems;

    private int TotalPages => (int)Math.Ceiling((double)totalItems / pageSize);

    private IEnumerable<FilmDto> DisplayedItems => Paginate(films);

    private IEnumerable<FilmDto> Paginate(IEnumerable<FilmDto> films)
    {
        var filteredFilms = films;

        totalItems = filteredFilms.Count();
        return filteredFilms.Skip((currentPage - 1) * pageSize).Take(pageSize);
    }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var email = authState.User.Identity.Name;

        profile = await httpClient.GetFromJsonAsync<UserDetailDto>($"api/Auth/detail?email={email}");

        films = profile.SavedFilms;

        // foreach (var item in films)
        // {
        //     string flag = await httpClient.GetStringAsync($"api/Films/{item.Id}");
        //     filmTypes.Add(item.Id, flag);
        // }
    }

    private void GoToPage(int page)
    {
        if (page >= 1 && page <= TotalPages)
        {
            currentPage = page;
        }
    }

}

