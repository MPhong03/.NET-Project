@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ILocalStorageService localStorage

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        @*<div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
            <a href="/register" target="_blank">Register</a>
            <a href="/login" target="_blank">Login</a>
        </div>*@

        <div class="top-row px-4">
            @if (!isLoggedIn)
            {
                <NavLink href="/register">Register</NavLink>
                <NavLink href="/login">Login</NavLink>
            }
            else
            {
                <NavLink href="/swagger">API</NavLink>
                <NavLink href="/logout">Logout</NavLink>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        // Nếu đã đăng nhập, set isLoggedIn thành true
        isLoggedIn = await CheckIfLoggedIn();
    }

    private async Task<bool> CheckIfLoggedIn()
    {
        var token = await localStorage.GetItemAsStringAsync("token");
        var tokenExpiration = await localStorage.GetItemAsStringAsync("tokenExpiration");

        DateTime dateTimeNow = DateTime.UtcNow; // Get the current UTC time

        long unixTimestamp = ((DateTimeOffset)dateTimeNow).ToUnixTimeSeconds();

        if (!string.IsNullOrEmpty(token) || (unixTimestamp < long.Parse(tokenExpiration)))
        {
            return true;
        }

        return false;
    }

}
