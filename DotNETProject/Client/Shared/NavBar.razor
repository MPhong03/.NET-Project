@using Blazored.LocalStorage
@using DotNETProject.Client.Service;
@inject ILocalStorageService localStorage
@inject CustomAuthStateProvider AuthStateProvider

<nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">HUYLENGU</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" href="/search">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                        </svg>
                        
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled" aria-current="page" href="/movielist">Phim Hot</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/list/@Type[2]">Phim Bộ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="/list/@Type[1]">Phim Lẻ</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled" aria-current="page" href="/">Phim Mới</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">FAQ</a>
                </li>
                @*<li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Dropdown
                    </a>
                    <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <li><a class="dropdown-item" href="#">Action</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#">Something else here</a></li>
                    </ul>
                </li>*@
                @*<li class="nav-item">
                    <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
                </li>*@
            </ul>
            @if(!isLoggedIn)
            {
                <NavLink href="/register" class="btn btn-outline-primary me-2">Register</NavLink>
                <NavLink href="/login" class="btn btn-outline-danger">Login</NavLink>
            } else
            {
                <ul class="navbar-nav me-2 mb-2 mb-lg-0">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Tài khoản
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="#">Thông tin</a></li>
                            <li><a class="dropdown-item" href="/my-collection">Bộ sưu tập</a></li>
                            <li><a class="dropdown-item" href="#">Lịch sử</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="/logout">Đăng xuất</a></li>
                        </ul>
                    </li>
                </ul>
                
            }
        </div>
    </div>
</nav>

@code {
    private bool isLoggedIn = false;

    private string userRole;

    public Dictionary<int, string> Type = new Dictionary<int, string>()
    {
        {1, "movie"},
        {2, "tv"}
    };

    protected override async Task OnInitializedAsync()
    {
        // try
        // {
        //     isLoggedIn = await CheckIfLoggedIn();
        // }
        // catch (Exception ex)
        // {
        //     isLoggedIn = false;
        //     Console.WriteLine($"An error occurred: {ex.Message}");
        // }
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity.IsAuthenticated;

        var user = authState.User;

        userRole = AuthStateProvider.GetUserRole(user);

        Console.WriteLine("ROLE:" + userRole);
    }

    // private async Task<bool> CheckIfLoggedIn()
    // {
    //     try
    //     {
    //         var token = await localStorage.GetItemAsStringAsync("token");
    //         var tokenExpiration = await localStorage.GetItemAsStringAsync("tokenExpiration");

    //         DateTime dateTimeNow = DateTime.UtcNow; // Get the current UTC time

    //         long unixTimestamp = ((DateTimeOffset)dateTimeNow).ToUnixTimeSeconds();

    //         if (!string.IsNullOrEmpty(token) || (unixTimestamp < long.Parse(tokenExpiration)))
    //         {
    //             return true;
    //         }

    //         return false;
    //     }
    //     catch (Exception ex)
    //     {
    //         Console.WriteLine($"An error occurred: {ex.Message}");
    //         return false;
    //     }
    // }
}
